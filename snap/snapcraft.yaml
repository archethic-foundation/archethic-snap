name: archethic
base: core20
summary: Official Archethic blockchain node software
description: |
  Welcome to Archethic blockchain. This tool enables you to install and run an Archethic node. Archethic is a next generation of blockchain focused on rapid scalability and easy accessibility.
    
  Archethic features:

    Fast transaction processing (> 1M tps)

    Lower energy consumption than other blockchain

    Designed with a high level of security (ARCH consensus supporting 90% of maliciousness)

    Adaptive cryptographic algorithms (quantum resistant)

    Decentralised Identity and Self Sovereign Identity

    Smart contract platform powered by a built-in interpreter

    Strong scalability with geo secured sharding

    Soft-Real-Time P2P view with supervised networking


  Maintained by:

    Archethic Foundation
    https://www.archethic.net
grade: stable
confinement: strict # use 'strict' once you have the right plugs and slots
adopt-info: archethic-node
architectures:
  - build-on: amd64
    run-on: amd64

package-repositories:
  - type: apt
    formats: [deb]
    components: [contrib]
    suites: [focal]
    key-id: 434975BD900CCBE4F7EE1B1ED208507CA14F4FCA
    url: https://packages.erlang-solutions.com/ubuntu

apps:
  archethic-node:
    daemon: simple
    command-chain:
      - bin/set-config
    command: bin/archethic_node_start
    stop-command: bin/archethic_node_stop
    install-mode: disable
    refresh-mode: endure
    plugs:
      - network
      - network-bind
      - tpm

layout:
  /usr/lib/locale:
    bind: $SNAP_COMMON/usr/lib/locale
  /usr/share/i18n/SUPPORTED:
    symlink: $SNAP/usr/share/i18n/SUPPORTED
  /usr/share/i18n/locales:
    symlink: $SNAP/usr/share/i18n/locales
  /usr/share/i18n/charmaps:
    symlink: $SNAP/usr/share/i18n/charmaps

parts:
  archethic-node:
    plugin: dump
    source: https://github.com/archethic-foundation/archethic-node.git
    source-branch: 'develop'
    source-type: git
    build-packages:
      - git
      - wget
      # Required for Erlang/Elixir installation
      - locales
      - curl
      - unzip
      - libncurses5-dev
      - libssl-dev
      - erlang-dev
      # Required for Archethic node C programs
      - build-essential
      - automake
      - gcc
      - libsodium-dev
      - libgmp-dev
      - libtss2-dev
    build-environment:
      - DEBIAN_FRONTEND: 'noninteractive'
      - LANG: 'en_US.UTF-8'
      - MIX_ENV: 'prod'
      - MIX_HOME: '/root/.mix'
      - CFLAGS: ''
      - CPPFLAGS: ''
      - CXXFLAGS: ''
      - LDFLAGS: ''
      - PKG_CONFIG_PATH: ''
    stage-packages:
      - locales
      - openssl
      - libsodium-dev
      - libtss2-dev 
    override-build: |
      # Install asdf
      git clone https://github.com/asdf-vm/asdf.git ~/.asdf 2> /dev/null || echo "Skip asdf install"
      grep ". ~/.asdf/asdf.sh" ~/.profile || echo '. ~/.asdf/asdf.sh' >> ~/.profile
      source ~/.profile
      asdf update

      asdf plugin add erlang || :
      asdf plugin add elixir || :
      asdf plugin add nodejs || :
      asdf install

      # Set the current version of asdf
      ELIXIR_VERSION=$(asdf current elixir | awk '{print $2}')
      ERLANG_VERSION=$(asdf current erlang | awk '{print $2}')
      NODEJS_VERSION=$(asdf current nodejs | awk '{print $2}')

      asdf global elixir $ELIXIR_VERSION
      asdf global erlang $ERLANG_VERSION
      asdf global nodejs $NODEJS_VERSION

      VERSION=$(grep 'version:' mix.exs | cut -d '"' -f2)

      # Install updated versions of hex/rebar
      mix local.hex --if-missing --force &
      wait $!
      mix local.rebar --if-missing --force &
      wait $!
      
      # Fetch deps and compile
      mix deps.get &
      wait $!

      # Builds WEB assets in production mode
      npm ci --prefix assets
      mix assets.saas &
      wait $!
      mix assets.deploy &
      wait $!

      # Build release
      mix distillery.release &
      wait $!
      tar zxvf _build/prod/rel/archethic_node/releases/$VERSION/archethic_node.tar.gz -C $SNAPCRAFT_PART_INSTALL/


