name: archethic-node # you probably want to 'snapcraft register <name>'
base: core20 # the base snap is the execution environment for this snap
version: '0.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: Official ArchEthic blockchain node software
description: |
  Welcome to the ArchEthic Node! This tool enables you to install and run an ArchEthic node. ArchEthic is a next generation of blockchain focused on rapid scalability and easy accessibility.
    
  ArchEthic features:

    Fast transaction processing (> 1M tps)

    Lower energy consumption than other blockchain

    Designed with a high level of security (ARCH consensus supporting 90% of maliciousness)

    Adaptive cryptographic algorithms (quantum resistant)

    Decentralised Identity and Self Sovereign Identity

    Smart contract platform powered by a built-in interpreter

    Strong scalability with geo secured sharding

    Soft-Real-Time P2P view with supervised networking


  Maintained by:

    ArchEthic Foundation
    https://www.archethic.net
grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots
architectures:
  - build-on: amd64
    run-on: amd64

apps:
  archethic-node:
    command: $SNAP/bin/archethic_node foreground

plugs:
  config-system:
   interface: system-files
   write:
     - /etc

hooks:
  install:
    plugs: [network,network-bind,hardware-observe,config-system]

parts:
  archethic-node:
    plugin: dump
    source: https://github.com/archethic-foundation/archethic-node.git
    source-branch: master
    source-type: git
    build-packages:
      - gnupg2
      - build-essential
      - zlib1g-dev
      - libgmp-dev
      - nodejs
      - npm
      - openssl
      - libsodium23
      - autoconf-archive
      - libcmocka0
      - libcmocka-dev
      - procps
      - pkg-config
      - gcc
      - libtool
      - automake
      - libssl-dev
      - uthash-dev
      - autoconf
      - doxygen
      - libjson-c-dev
      - libini-config-dev
      - libcurl4-openssl-dev
      - acl
      - git
      - wget
      - esl-erlang
      - elixir
    stage-packages:
      - nodejs
      - npm
      - esl-erlang
      - elixir
      - libsodium23
      - libgmp-dev
      - openssl
      - scylla
      - openjdk-8-jre-headless
    package-repositories:
      - type: apt
        path: /erlang-solutions_2.0_all.deb
        url: https://packages.erlang-solutions.com
      - type: apt
        components: [multiverse]
        suites: [focal]
        formats: [deb]
        architectures: [amd64]
        key-server: hkp://keyserver.ubuntu.com:80
        key-id: 5e08fbd8b5d6ec9c
        path: /downloads/scylla/deb/ubuntu/scylladb-4.3
        url: http://downloads.scylladb.com
    override-build: |
      locale-gen en_US.UTF-8
      export DEBIAN_FRONTEND=noninteractive
      export LANG=en_US.UTF-8
      wget https://github.com/tpm2-software/tpm2-tss/releases/download/3.1.0/tpm2-tss-3.1.0.tar.gz
      tar -xf tpm2-tss-3.1.0.tar.gz --one-top-level=tpm2-tss --strip-components 1
      rm tpm2-tss-3.1.0.tar.gz && cd tpm2-tss
      ./configure --with-udevrulesdir=/etc/udev/rules.d
      make -j$(nproc)
      make install
      sed -i "s/tss/$(whoami)/gi" /etc/udev/rules.d/tpm-udev.rules
      udevadm control --reload-rules && sudo udevadm trigger
      ldconfig
      apt install tpm2-tools
      cd $SNAPCRAFT_PART_SRC
      make
      MIX_ENV=prod mix distillery.release
      VERSION=$(grep 'version:' mix.exs | cut -d '"' -f2)
      tar zxvf _build/prod/rel/archethic_node/releases/$VERSION/archethic_node.tar.gz -C $SNAPCRAFT_PART_INSTALL
      rm -rf .
